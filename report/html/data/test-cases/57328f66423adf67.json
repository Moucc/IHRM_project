{
  "uid" : "57328f66423adf67",
  "name" : "（必填项重复）新增失败部门：28s测试研究部2分队",
  "fullName" : "testcase.test_department_manage.Test_department_manage#test_add_department",
  "historyId" : "351aa4934b44471d61f995c8aefbfd93",
  "time" : {
    "start" : 1632144077192,
    "stop" : 1632144077261,
    "duration" : 69
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.test_department_manage.Test_department_manage object at 0x00000160EEA00F70>\nenvironment_url = 'http://ihrm-test.itheima.net'\nget_token = {'Authorization': 'Bearer a84e57ed-1da4-4117-b04a-28ffa9bc48c4'}\ntitle = '（必填项重复）新增失败部门：28s测试研究部2分队'\nask = {'code': 9527, 'introduce': '一个很垃圾的研究部', 'name': '28s测试研究部2分队', 'pid': 9526}\nexcepted = {'code': 99999, 'message': '请稍后重试', 'status_code': 200, 'success': False}\n\n    @allure.story('新增部门信息-数据驱动测试')\n    @allure.title('{title}')\n    @pytest.mark.usefixtures('re_login')\n    @pytest.mark.parametrize('title, ask, excepted', My_return_data.return_test_data('add_department.yaml'))\n    def test_add_department(self, environment_url, get_token, title, ask, excepted):\n        try:\n            res = Department_Manage().add_department(environment_url, get_token, ask)\n            common_assert(res, excepted)\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_department_manage.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_department_manage.py:69: in test_add_department\n    common_assert(res, excepted)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 99999, 'message': '请稍后重试', 'status_code': 200, 'success': False}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "获取token",
    "time" : {
      "start" : 1632144077187,
      "stop" : 1632144077191,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "从config.yaml获取环境IP",
    "time" : {
      "start" : 1632144077114,
      "stop" : 1632144077115,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "前置登陆操作",
    "time" : {
      "start" : 1632144077115,
      "stop" : 1632144077187,
      "duration" : 72
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "登陆操作",
      "time" : {
        "start" : 1632144077115,
        "stop" : 1632144077186,
        "duration" : 71
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'http://ihrm-test.itheima.net'"
      }, {
        "name" : "login_data",
        "value" : "{'mobile': '13800000002', 'password': '123456'}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.test_department_manage.Test_department_manage object at 0x00000160EEA00F70>\nenvironment_url = 'http://ihrm-test.itheima.net'\nget_token = {'Authorization': 'Bearer a84e57ed-1da4-4117-b04a-28ffa9bc48c4'}\ntitle = '（必填项重复）新增失败部门：28s测试研究部2分队'\nask = {'code': 9527, 'introduce': '一个很垃圾的研究部', 'name': '28s测试研究部2分队', 'pid': 9526}\nexcepted = {'code': 99999, 'message': '请稍后重试', 'status_code': 200, 'success': False}\n\n    @allure.story('新增部门信息-数据驱动测试')\n    @allure.title('{title}')\n    @pytest.mark.usefixtures('re_login')\n    @pytest.mark.parametrize('title, ask, excepted', My_return_data.return_test_data('add_department.yaml'))\n    def test_add_department(self, environment_url, get_token, title, ask, excepted):\n        try:\n            res = Department_Manage().add_department(environment_url, get_token, ask)\n            common_assert(res, excepted)\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_department_manage.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_department_manage.py:69: in test_add_department\n    common_assert(res, excepted)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 99999, 'message': '请稍后重试', 'status_code': 200, 'success': False}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError",
    "steps" : [ {
      "name" : "添加部门",
      "time" : {
        "start" : 1632144077192,
        "stop" : 1632144077259,
        "duration" : 67
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'http://ihrm-test.itheima.net'"
      }, {
        "name" : "token",
        "value" : "{'Authorization': 'Bearer a84e57ed-1da4-4117-b04a-28ffa9bc48c4'}"
      }, {
        "name" : "add_data",
        "value" : "{'name': '28s测试研究部2分队', 'code': 9527, 'introduce': '一个很垃圾的研究部', 'pid': 9526}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "进行断言",
      "time" : {
        "start" : 1632144077260,
        "stop" : 1632144077260,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"E:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\IHRM_project\\utils\\commen_assert.py\", line 13, in common_assert\n    assert expected.get('code') == res.json().get('code')\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "res",
        "value" : "<Response [200]>"
      }, {
        "name" : "expected",
        "value" : "{'success': False, 'code': 99999, 'message': '请稍后重试', 'status_code': 200}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "638b2ded89efc404",
      "name" : "log",
      "source" : "638b2ded89efc404.txt",
      "type" : "text/plain",
      "size" : 561
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "基本信息管理模块"
  }, {
    "name" : "feature",
    "value" : "部门管理模块"
  }, {
    "name" : "story",
    "value" : "新增部门信息-数据驱动测试"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('re_login')"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_department_manage"
  }, {
    "name" : "subSuite",
    "value" : "Test_department_manage"
  }, {
    "name" : "host",
    "value" : "LAPTOP-LM9EFOVP"
  }, {
    "name" : "thread",
    "value" : "9360-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_department_manage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "ask",
    "value" : "{'name': '28s测试研究部2分队', 'code': 9527, 'introduce': '一个很垃圾的研究部', 'pid': 9526}"
  }, {
    "name" : "excepted",
    "value" : "{'success': False, 'code': 99999, 'message': '请稍后重试', 'status_code': 200}"
  }, {
    "name" : "title",
    "value" : "'（必填项重复）新增失败部门：28s测试研究部2分队'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('re_login')" ]
  },
  "source" : "57328f66423adf67.json",
  "parameterValues" : [ "{'name': '28s测试研究部2分队', 'code': 9527, 'introduce': '一个很垃圾的研究部', 'pid': 9526}", "{'success': False, 'code': 99999, 'message': '请稍后重试', 'status_code': 200}", "'（必填项重复）新增失败部门：28s测试研究部2分队'" ]
}