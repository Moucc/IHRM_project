{
  "uid" : "3315bf2a6e12af6",
  "name" : "成功新增员工jack1666t1696512-必填项+部分选填项",
  "fullName" : "testcase.test_employee_manage.Test_add_employee#test_add_empolyee",
  "historyId" : "0e430beb79302c2ac6a06c1d2df94dbc",
  "time" : {
    "start" : 1632144218847,
    "stop" : 1632144218919,
    "duration" : 72
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <testcase.test_employee_manage.Test_add_employee object at 0x0000028EE66D1AF0>\nenvironment_url = 'http://ihrm-test.itheima.net'\nadd_data = {'departmentId': '1266699057968001024', 'departmentName': '销售', 'mobile': '1311965226', 'username': 'jack1666t1696512', ...}\nexpected = {'code': 10000, 'message': '操作成功', 'status_code': 200, 'success': True}\ntitle = '成功新增员工jack1666t1696512-必填项+部分选填项'\nget_token = {'Authorization': 'Bearer 22d20470-2b6d-415b-b75a-ee6794d988ff'}\n\n    @allure.story('员工新增数据驱动测试')\n    @allure.title('{title}')\n    @pytest.mark.usefixtures('re_login')\n    @pytest.mark.parametrize('title, add_data, expected', My_return_data.return_test_data('add_employee.yaml'))\n    def test_add_empolyee(self, environment_url, add_data, expected, title, get_token):\n        try:\n            res = EmployeeManage().add_employee(environment_url, add_data, get_token)\n            common_assert(res, expected)\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_employee_manage.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_employee_manage.py:31: in test_add_empolyee\n    common_assert(res, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 10000, 'message': '操作成功', 'status_code': 200, 'success': True}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "从config.yaml获取环境IP",
    "time" : {
      "start" : 1632144218763,
      "stop" : 1632144218763,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "前置登陆操作",
    "time" : {
      "start" : 1632144218764,
      "stop" : 1632144218840,
      "duration" : 76
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "登陆操作",
      "time" : {
        "start" : 1632144218764,
        "stop" : 1632144218840,
        "duration" : 76
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'http://ihrm-test.itheima.net'"
      }, {
        "name" : "login_data",
        "value" : "{'mobile': '13800000002', 'password': '123456'}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "获取token",
    "time" : {
      "start" : 1632144218841,
      "stop" : 1632144218846,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <testcase.test_employee_manage.Test_add_employee object at 0x0000028EE66D1AF0>\nenvironment_url = 'http://ihrm-test.itheima.net'\nadd_data = {'departmentId': '1266699057968001024', 'departmentName': '销售', 'mobile': '1311965226', 'username': 'jack1666t1696512', ...}\nexpected = {'code': 10000, 'message': '操作成功', 'status_code': 200, 'success': True}\ntitle = '成功新增员工jack1666t1696512-必填项+部分选填项'\nget_token = {'Authorization': 'Bearer 22d20470-2b6d-415b-b75a-ee6794d988ff'}\n\n    @allure.story('员工新增数据驱动测试')\n    @allure.title('{title}')\n    @pytest.mark.usefixtures('re_login')\n    @pytest.mark.parametrize('title, add_data, expected', My_return_data.return_test_data('add_employee.yaml'))\n    def test_add_empolyee(self, environment_url, add_data, expected, title, get_token):\n        try:\n            res = EmployeeManage().add_employee(environment_url, add_data, get_token)\n            common_assert(res, expected)\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_employee_manage.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_employee_manage.py:31: in test_add_empolyee\n    common_assert(res, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 10000, 'message': '操作成功', 'status_code': 200, 'success': True}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError",
    "steps" : [ {
      "name" : "发送新增员工请求，获取响应体",
      "time" : {
        "start" : 1632144218847,
        "stop" : 1632144218918,
        "duration" : 71
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'http://ihrm-test.itheima.net'"
      }, {
        "name" : "add_data",
        "value" : "{'username': 'jack1666t1696512', 'mobile': '1311965226', 'workNumber': '169653', 'departmentName': '销售', 'departmentId': '1266699057968001024'}"
      }, {
        "name" : "token",
        "value" : "{'Authorization': 'Bearer 22d20470-2b6d-415b-b75a-ee6794d988ff'}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "进行断言",
      "time" : {
        "start" : 1632144218918,
        "stop" : 1632144218918,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError\n",
      "statusTrace" : "  File \"E:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\IHRM_project\\utils\\commen_assert.py\", line 13, in common_assert\n    assert expected.get('code') == res.json().get('code')\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "res",
        "value" : "<Response [200]>"
      }, {
        "name" : "expected",
        "value" : "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "d11c4e32182c3120",
      "name" : "log",
      "source" : "d11c4e32182c3120.txt",
      "type" : "text/plain",
      "size" : 536
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "员工新增数据驱动测试"
  }, {
    "name" : "epic",
    "value" : "基本信息管理模块"
  }, {
    "name" : "feature",
    "value" : "新增员工测试"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('re_login')"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_employee_manage"
  }, {
    "name" : "subSuite",
    "value" : "Test_add_employee"
  }, {
    "name" : "host",
    "value" : "LAPTOP-LM9EFOVP"
  }, {
    "name" : "thread",
    "value" : "13272-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_employee_manage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "add_data",
    "value" : "{'username': 'jack1666t1696512', 'mobile': '1311965226', 'workNumber': '169653', 'departmentName': '销售', 'departmentId': '1266699057968001024'}"
  }, {
    "name" : "expected",
    "value" : "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"
  }, {
    "name" : "title",
    "value" : "'成功新增员工jack1666t1696512-必填项+部分选填项'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "84525246eec101f6",
      "status" : "failed",
      "statusDetails" : "AssertionError",
      "time" : {
        "start" : 1632144078779,
        "stop" : 1632144078846,
        "duration" : 67
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('re_login')" ]
  },
  "source" : "3315bf2a6e12af6.json",
  "parameterValues" : [ "{'username': 'jack1666t1696512', 'mobile': '1311965226', 'workNumber': '169653', 'departmentName': '销售', 'departmentId': '1266699057968001024'}", "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}", "'成功新增员工jack1666t1696512-必填项+部分选填项'" ]
}