{"name": "新增员工jack2666t1965112-只有必填项", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_employee_manage.Test_add_employee object at 0x00000160EEABB340>\nenvironment_url = 'http://ihrm-test.itheima.net'\nadd_data = {'mobile': '13426965086', 'username': 'jack2666t1965112', 'workNumber': '199653'}\nexpected = {'code': 10000, 'message': '操作成功', 'status_code': 200, 'success': True}\ntitle = '新增员工jack2666t1965112-只有必填项'\nget_token = {'Authorization': 'Bearer 9ddaea04-cfc7-452f-b56c-179b29d5ee82'}\n\n    @allure.story('员工新增数据驱动测试')\n    @allure.title('{title}')\n    @pytest.mark.usefixtures('re_login')\n    @pytest.mark.parametrize('title, add_data, expected', My_return_data.return_test_data('add_employee.yaml'))\n    def test_add_empolyee(self, environment_url, add_data, expected, title, get_token):\n        try:\n            res = EmployeeManage().add_employee(environment_url, add_data, get_token)\n            common_assert(res, expected)\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_employee_manage.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_employee_manage.py:31: in test_add_empolyee\n    common_assert(res, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 10000, 'message': '操作成功', 'status_code': 200, 'success': True}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError"}, "steps": [{"name": "发送新增员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "add_data", "value": "{'username': 'jack2666t1965112', 'mobile': '13426965086', 'workNumber': '199653'}"}, {"name": "token", "value": "{'Authorization': 'Bearer 9ddaea04-cfc7-452f-b56c-179b29d5ee82'}"}], "start": 1632144078623, "stop": 1632144078695}, {"name": "进行断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\IHRM_project\\utils\\commen_assert.py\", line 13, in common_assert\n    assert expected.get('code') == res.json().get('code')\n"}, "parameters": [{"name": "res", "value": "<Response [200]>"}, {"name": "expected", "value": "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"}], "start": 1632144078695, "stop": 1632144078695}], "attachments": [{"name": "log", "source": "4ad1985d-7992-4f21-b8d4-82c14d41b1d8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'新增员工jack2666t1965112-只有必填项'"}, {"name": "add_data", "value": "{'username': 'jack2666t1965112', 'mobile': '13426965086', 'workNumber': '199653'}"}, {"name": "expected", "value": "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"}], "start": 1632144078623, "stop": 1632144078696, "uuid": "88238ea7-32c7-4287-8ee6-1804ed7d0c8a", "historyId": "cbcaaba18dc530e70324188c0e834cb3", "testCaseId": "3514be85f72a9f90565fca475e34c80f", "fullName": "testcase.test_employee_manage.Test_add_employee#test_add_empolyee", "labels": [{"name": "epic", "value": "基本信息管理模块"}, {"name": "feature", "value": "新增员工测试"}, {"name": "story", "value": "员工新增数据驱动测试"}, {"name": "tag", "value": "@pytest.mark.usefixtures('re_login')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_employee_manage"}, {"name": "subSuite", "value": "Test_add_employee"}, {"name": "host", "value": "LAPTOP-LM9EFOVP"}, {"name": "thread", "value": "9360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_employee_manage"}]}