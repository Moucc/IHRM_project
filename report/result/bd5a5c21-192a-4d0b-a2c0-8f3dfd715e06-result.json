{"name": "修改员工不存在参数user：123", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_employee_manage.Test_modify_employee object at 0x0000028EE668B310>\nenvironment_url = 'http://ihrm-test.itheima.net', modify_data = {'user': '123'}\nexpected = {'code': 20001, 'message': '失败', 'status_code': 200, 'success': False}\ntitle = '修改员工不存在参数user：123'\nget_token = {'Authorization': 'Bearer f11cba6d-d750-4731-906f-5d49737b0340'}\n\n    @allure.story('修改员工(1439429426361139200)，数据驱动测试')\n    @allure.title('{title}')\n    @pytest.mark.usefixtures('re_login')\n    @pytest.mark.parametrize('title, modify_data, expected', My_return_data.return_test_data('modify_employee.yaml'))\n    def test_modify_employee(self, environment_url, modify_data, expected, title, get_token):\n        try:\n            res = EmployeeManage().modify_employee(environment_url, Test_modify_employee.employee_id, modify_data, get_token)\n            common_assert(res, expected)\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_employee_manage.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_employee_manage.py:49: in test_modify_employee\n    common_assert(res, expected)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 20001, 'message': '失败', 'status_code': 200, 'success': False}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError"}, "steps": [{"name": "发送修改员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "employee_id", "value": "'1439429426361139200'"}, {"name": "modify_data", "value": "{'user': '123'}"}, {"name": "token", "value": "{'Authorization': 'Bearer f11cba6d-d750-4731-906f-5d49737b0340'}"}], "start": 1632144219959, "stop": 1632144220033}, {"name": "进行断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\IHRM_project\\utils\\commen_assert.py\", line 13, in common_assert\n    assert expected.get('code') == res.json().get('code')\n"}, "parameters": [{"name": "res", "value": "<Response [200]>"}, {"name": "expected", "value": "{'success': False, 'code': 20001, 'message': '失败', 'status_code': 200}"}], "start": 1632144220033, "stop": 1632144220033}], "attachments": [{"name": "log", "source": "ce97ea14-700c-4ab3-952b-f69240fde54a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'修改员工不存在参数user：123'"}, {"name": "modify_data", "value": "{'user': '123'}"}, {"name": "expected", "value": "{'success': False, 'code': 20001, 'message': '失败', 'status_code': 200}"}], "start": 1632144219958, "stop": 1632144220034, "uuid": "82e65abf-0070-4ed0-91da-a5bade1ff7d3", "historyId": "04c0a42082f5c649e7c22bb1abba2392", "testCaseId": "cb65a6542e6b7b72cda898dd0809aa3f", "fullName": "testcase.test_employee_manage.Test_modify_employee#test_modify_employee", "labels": [{"name": "epic", "value": "基本信息管理模块"}, {"name": "feature", "value": "修改员工测试"}, {"name": "story", "value": "修改员工(1439429426361139200)，数据驱动测试"}, {"name": "tag", "value": "@pytest.mark.usefixtures('re_login')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_employee_manage"}, {"name": "subSuite", "value": "Test_modify_employee"}, {"name": "host", "value": "LAPTOP-LM9EFOVP"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_employee_manage"}]}