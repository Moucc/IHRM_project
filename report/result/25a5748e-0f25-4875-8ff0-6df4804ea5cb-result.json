{"name": "员工增删改查，但删除会失败验证", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_employee_manage.Test_employee_manage object at 0x0000028EE6679A30>\nenvironment_url = 'http://ihrm-test.itheima.net'\nget_token = {'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}\n\n    @allure.story('员工增删改查流程测试')\n    @allure.title('员工增删改查，但删除会失败验证')\n    @pytest.mark.usefixtures('re_login')\n    def test_employee_manage(self, environment_url, get_token):\n        try:\n            data = build_data()\n            res = EmployeeManage().add_employee(environment_url, data.get('add_data'), get_token)\n            common_assert(res, data.get('expected'))\n            with allure.step('获取新增员工ID'):\n                Test_employee_manage.employee_id = res.json().get('data').get('id')\n            with allure.step('验证查询员工username与新增员工一致'):\n                res = EmployeeManage().query_employee(environment_url, Test_employee_manage.employee_id, get_token)\n                assert data.get('add_data').get('username') == res.json().get('data').get('username')\n            res = EmployeeManage().modify_employee(environment_url, Test_employee_manage.employee_id, data.get('modify_data'), get_token)\n            common_assert(res, data.get('expected'))\n            with allure.step('验证查询员工username与修改后员工一致'):\n                res = EmployeeManage().query_employee(environment_url, Test_employee_manage.employee_id, get_token)\n                assert data.get('modify_data').get('username') == res.json().get('data').get('username')\n            res = EmployeeManage().delete_employee(environment_url, Test_employee_manage.employee_id, get_token)\n            common_assert(res, data.get('expected'))\n            with allure.step('验证删除员工后，查询员工返回空'):\n                res = EmployeeManage().query_employee(environment_url, Test_employee_manage.employee_id, get_token)\n                common_assert(res, data.get('expected_after_delete'))\n        except Exception as e:\n            err = str(res.json()) + '\\n' + str(e)\n            MyLog.error(err)\n>           raise e\n\ntest_employee_manage.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_employee_manage.py:101: in test_employee_manage\n    common_assert(res, data.get('expected_after_delete'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>\nexpected = {'code': 20005, 'message': '查询员工失败', 'status_code': 200, 'success': False}\n\n    @allure.step('进行断言')\n    def common_assert(res, expected):\n        '''\n        对响应体进行断言\n        :param res: 请求响应体\n        :param expected: 字典：{success: true， code: 10000， message: '操作成功'， status_code: 200}\n        :return:assert断言\n        '''\n        assert expected.get('status_code') == res.status_code\n>       assert expected.get('code') == res.json().get('code')\nE       AssertionError\n\n..\\utils\\commen_assert.py:13: AssertionError"}, "steps": [{"name": "员工增删改查流程测试-从manage_employee获取数据", "status": "passed", "start": 1632144220444, "stop": 1632144220446}, {"name": "发送新增员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "add_data", "value": "{'username': 'jack1666t1331112', 'mobile': '13116933086', 'timeOfEntry': '2020-07-09', 'formOfEmployment': 1, 'workNumber': '169333', 'departmentName': '销售', 'departmentId': '1266699057968001024', 'correctionTime': '2020-07-30T16:00:00.000Z'}"}, {"name": "token", "value": "{'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}"}], "start": 1632144220446, "stop": 1632144220519}, {"name": "进行断言", "status": "passed", "parameters": [{"name": "res", "value": "<Response [200]>"}, {"name": "expected", "value": "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"}], "start": 1632144220519, "stop": 1632144220520}, {"name": "获取新增员工ID", "status": "passed", "start": 1632144220520, "stop": 1632144220520}, {"name": "验证查询员工username与新增员工一致", "status": "passed", "steps": [{"name": "发送查询员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "employee_id", "value": "'1439943408415145984'"}, {"name": "token", "value": "{'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}"}], "start": 1632144220520, "stop": 1632144220588}], "start": 1632144220520, "stop": 1632144220588}, {"name": "发送修改员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "employee_id", "value": "'1439943408415145984'"}, {"name": "modify_data", "value": "{'username': 'user0920'}"}, {"name": "token", "value": "{'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}"}], "start": 1632144220589, "stop": 1632144220670}, {"name": "进行断言", "status": "passed", "parameters": [{"name": "res", "value": "<Response [200]>"}, {"name": "expected", "value": "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"}], "start": 1632144220670, "stop": 1632144220670}, {"name": "验证查询员工username与修改后员工一致", "status": "passed", "steps": [{"name": "发送查询员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "employee_id", "value": "'1439943408415145984'"}, {"name": "token", "value": "{'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}"}], "start": 1632144220670, "stop": 1632144220759}], "start": 1632144220670, "stop": 1632144220759}, {"name": "发送删除员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "employee_id", "value": "'1439943408415145984'"}, {"name": "token", "value": "{'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}"}], "start": 1632144220759, "stop": 1632144220835}, {"name": "进行断言", "status": "passed", "parameters": [{"name": "res", "value": "<Response [200]>"}, {"name": "expected", "value": "{'success': True, 'code': 10000, 'message': '操作成功', 'status_code': 200}"}], "start": 1632144220835, "stop": 1632144220835}, {"name": "验证删除员工后，查询员工返回空", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\IHRM_project\\testcase\\test_employee_manage.py\", line 101, in test_employee_manage\n    common_assert(res, data.get('expected_after_delete'))\n  File \"E:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\IHRM_project\\utils\\commen_assert.py\", line 13, in common_assert\n    assert expected.get('code') == res.json().get('code')\n"}, "steps": [{"name": "发送查询员工请求，获取响应体", "status": "passed", "parameters": [{"name": "url", "value": "'http://ihrm-test.itheima.net'"}, {"name": "employee_id", "value": "'1439943408415145984'"}, {"name": "token", "value": "{'Authorization': 'Bearer 0724d85c-006a-4fad-ac42-518886b54b3d'}"}], "start": 1632144220835, "stop": 1632144220907}, {"name": "进行断言", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"E:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\IHRM_project\\utils\\commen_assert.py\", line 13, in common_assert\n    assert expected.get('code') == res.json().get('code')\n"}, "parameters": [{"name": "res", "value": "<Response [200]>"}, {"name": "expected", "value": "{'success': False, 'code': 20005, 'message': '查询员工失败', 'status_code': 200}"}], "start": 1632144220907, "stop": 1632144220907}], "start": 1632144220835, "stop": 1632144220908}], "attachments": [{"name": "log", "source": "d74cb600-a62a-432e-a1fb-63cc015725cc-attachment.txt", "type": "text/plain"}], "start": 1632144220444, "stop": 1632144220909, "uuid": "c24807a2-cff2-452d-a8df-4ae1fae112b5", "historyId": "9b8d6535a59216150ebd0fa25d607a90", "testCaseId": "d379a4c36ce7c6dbaa4ce8f2376e7077", "fullName": "testcase.test_employee_manage.Test_employee_manage#test_employee_manage", "labels": [{"name": "epic", "value": "基本信息管理模块"}, {"name": "story", "value": "员工增删改查流程测试"}, {"name": "feature", "value": "员工管理流程测试"}, {"name": "tag", "value": "@pytest.mark.usefixtures('re_login')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_employee_manage"}, {"name": "subSuite", "value": "Test_employee_manage"}, {"name": "host", "value": "LAPTOP-LM9EFOVP"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_employee_manage"}]}